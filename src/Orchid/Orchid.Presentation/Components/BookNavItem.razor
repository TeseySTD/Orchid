@using Orchid.Core.Models
@* NavItemComponent.razor *@
<div class="nav-item" style="padding-left: @($"{Level * 1}rem")">
    <div class="flex items-center py-2 cursor-pointer" @onclick="SelectChapter">
        @if (HasNestedItems)
        {
            <button @onclick="ToggleExpand" class="mr-2 w-4 text-gray-500">
                @(IsExpanded ? "▼" : "▶")
            </button>
        }
        <span class="flex-1 text-gray-700 user-select-none">
            @Item.ChapterTitle
        </span>
    </div>

    @if (IsExpanded && HasNestedItems)
    {
        <div class="ml-4">
            @foreach (var nestedItem in Item.NestedItems)
            {
                <BookNavItem
                    Item="@nestedItem"
                    OnChapterSelect="OnChapterSelect"
                    Level="Level + 1"
                />
            }
        </div>
    }
</div>

@code {
    [Parameter, EditorRequired] public required NavItem Item { get; set; }

    [Parameter, EditorRequired] public required EventCallback<int> OnChapterSelect { get; set; }

    [Parameter] public int Level { get; set; }

    private bool IsExpanded { get; set; }
    private bool HasNestedItems => Item.NestedItems?.Any() == true;

    private void ToggleExpand()
    {
        IsExpanded = !IsExpanded;
    }

    private async Task SelectChapter()
    {
        await OnChapterSelect.InvokeAsync(Item.ChapterIndex);
    }

}